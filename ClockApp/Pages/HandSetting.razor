@using ClockApp.Data;
<style>
.containeritem {
	height: 20vh;
	width:20vh;
	background-color:#fffef2;
    box-shadow: 1px 1px 5px rgba(0,0,0,0.5);
	border: 4px solid #fff;
	margin:1vh;
	flex: 1 0;
}
.container{
	display:flex;
	margin: auto 0;
	padding:0;
}

input[type=radio]{
	display:none;
}

input[type=radio]:checked+label{
    border: 3px solid #000;
    box-sizing: border-box;
}

</style>
<div class="container">
	@foreach (var clock in HaveClock)
	{
		<div class="itemWrapper">
			@if(Selected == clock){
				<input checked type="radio" id="@clock" name="sign" value="Hand" @onchange="() => ItemChanged(clock)"/>
				<label for="@clock" class="containeritem">
				<svg width="@clockSize" height="@clockSize" viewBox="0 0 300 300">
					<image x="136.5" y="18" width="27" height="209" href="@Path.Combine(GetHandshref(clock), "HourHand.svg")" transform="rotate( -65, 150, 150)"/> // 時針の画像を追加
					<image x="136.5" y="18" width="27" height="209" href="@Path.Combine(GetHandshref(clock), "MinuteHand.svg")" transform="rotate( 60, 150, 150)" /> // 分針の画像を追加
					<image x="136.5" y="18" width="27" height="209" href="@Path.Combine(GetHandshref(clock), "SecondHand.svg")" transform="rotate( 180, 150, 150)" />
				</svg>
			</label>
				
			}
			else
			{
				<input type="radio" id="@clock" name="sign" value="Hand" @onchange="() => ItemChanged(clock)"/>
				<label for="@clock" class="containeritem">
				<svg width="@clockSize" height="@clockSize" viewBox="0 0 300 300">
					<image x="136.5" y="18" width="27" height="209" href="@Path.Combine(GetHandshref(clock), "HourHand.svg")" transform="rotate( -65, 150, 150)"/> // 時針の画像を追加
					<image x="136.5" y="18" width="27" height="209" href="@Path.Combine(GetHandshref(clock), "MinuteHand.svg")" transform="rotate( 60, 150, 150)" /> // 分針の画像を追加
					<image x="136.5" y="18" width="27" height="209" href="@Path.Combine(GetHandshref(clock), "SecondHand.svg")" transform="rotate( 180, 150, 150)" />
				</svg>
				</label>
			}
		</div>
	}
</div>

@code {
	string clockSize = "100%";

	string[] HaveClock = new string[]{ "RomanNumber", "OldClock" };

	string Selected = "RomanNumber";

	private string handFolder = "images/ClockHands";
	private string GetHandshref(string path) => Path.Combine(handFolder,path);

	public HandSetting()
	{
		Selected = MyPreferences.Get("Hands", Selected);
	}

	async void ItemChanged(string hand)
	{
		await OnHandChangedCallback.InvokeAsync(hand);
	}

	[Parameter]
	public EventCallback<string> OnHandChangedCallback { get; set; }

}
